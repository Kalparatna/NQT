Shallow Copy:
A shallow copy creates a new object, but instead of copying the elements themselves, it copies references to the original objects.
For lists and dictionaries, a shallow copy creates a new container object, but the elements within the container are still references to the same objects as the original container.
Changes made to the elements (objects) inside the copied container are reflected in the original container and vice versa.
In Python, you can create a shallow copy using the copy module's copy() function or by using the copy() method for certain objects.

import copy

original_list = [1, [2, 3], 4]
shallow_copied_list = copy.copy(original_list)

shallow_copied_list[1][0] = 'X'

print(original_list)  # Output: [1, ['X', 3], 4]
